- name: INSTALL OVS
  ansible.builtin.package:
    name:
      - ovn-central
      - ovn-host
      - ovn-common
    state: present

- name: ALLOW EXTERNAL CONNECTIONS TO OVN-NORTHD
  command: "/usr/bin/ovn-nbctl set-connection ptcp:6641:{{ ansible_tailscale0.ipv4.address }} -- set connection . inactivity_probe=60000"
  changed_when: false

- name: ALLOW EXTERNAL CONNECTIONS TO OVN-SOUTHD
  command: "/usr/bin/ovn-sbctl set-connection ptcp:6642:{{ ansible_tailscale0.ipv4.address }} -- set connection . inactivity_probe=60000"
  changed_when: false

- name: Create neutron database
  community.mysql.mysql_db:
    name: neutron
    state: present
    login_user: root
    login_password: "{{ openstack_sql_root_dbpass }}"
    login_unix_socket: /var/run/mysql/mysql.sock
  delegate_to: "{{ groups['sql_database'][0] }}"

- name: Create neutron database user
  community.mysql.mysql_user:
    name: neutron
    password: "{{ openstack_neutron_dbpass }}"
    priv: "neutron.*:ALL"
    host: "{{ item }}"
    state: present
    login_user: root
    login_password: "{{ openstack_sql_root_dbpass }}"
    login_unix_socket: /var/run/mysql/mysql.sock
  delegate_to: "{{ groups['sql_database'][0] }}"
  with_items:
    - localhost
    - "%"

- name: CREATE neutron USER
  no_log: true
  openstack.cloud.identity_user:
    cloud: admin
    endpoint_type: admin
    name: neutron
    password: "{{ openstack_neutron_pass }}"
    domain: default
    state: present
  become: false

- name: ASSIGN neutron USER TO ADMIN ROLE
  openstack.cloud.role_assignment:
    cloud: admin
    endpoint_type: admin
    role: admin
    user: neutron
    project: service
    domain: default
    state: present
  become: false

- name: CREATE neutron SERVICE
  openstack.cloud.catalog_service:
    cloud: admin
    endpoint_type: admin
    name: neutron
    type: network
    description: "OpenStack Networking"
    state: present
  become: false

- name: CREATE neutron ENDPOINTS
  openstack.cloud.endpoint:
    cloud: admin
    endpoint_type: admin
    service: neutron
    endpoint_interface: "{{ item }}"
    url: "http://{{ openstack_neutron_host }}:9696"
    region: RegionOne
    state: present
  become: false
  with_items:
    - public
    - internal
    - admin

- name: INSTALL neutron
  ansible.builtin.package:
    name:
      - neutron-server
      - neutron-plugin-ml2
    state: present

- name: neutron CONFIGURATION
  ansible.builtin.template:
    src: ./etc/neutron/neutron.conf
    dest: /etc/neutron/neutron.conf
    owner: root
    group: neutron
    mode: 0640
  register: neutron_configuration

- name: ml2 CONFIGURATION
  ansible.builtin.template:
    src: ./etc/neutron/plugins/ml2/ml2_conf.ini
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    owner: root
    group: neutron
    mode: 0640
  register: ml2_configuration

- name: neutron API DB SYNC
  command: "/usr/bin/neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head"
  become: true
  become_user: neutron
  changed_when: false

- name: Restart neutron for configuration change
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
  when: neutron_configuration.changed or ml2_configuration.changed
  with_items:
    - neutron-server

- name: CREATE PROVIDER NETWORK
  openstack.cloud.network:
    cloud: admin
    state: present
    external: true
    name: provider
    project: admin
    provider_network_type: flat
    provider_physical_network: provider
    shared: true
    region_name: RegionOne
  become: false

- name: CREATE PROVIDER SUBNET
  openstack.cloud.subnet:
    cloud: admin
    state: present
    allocation_pool_start: "192.168.23.100"
    allocation_pool_end: "192.168.23.200"
    cidr: "192.168.23.0/24"
    enable_dhcp: false
    gateway_ip: "192.168.23.254"
    name: provider
    network_name: provider
    project: admin
    region_name: RegionOne
  become: false
