- name: Create glance database
  community.mysql.mysql_db:
    name: glance
    state: present
    login_user: root
    login_password: "{{ openstack_sql_root_dbpass }}"
    login_unix_socket: /var/run/mysql/mysql.sock
  delegate_to: "{{ groups['sql_database'][0] }}"

- name: Create glance database user
  community.mysql.mysql_user:
    name: glance
    password: "{{ openstack_glance_dbpass }}"
    priv: "glance.*:ALL"
    host: "{{ item }}"
    state: present
    login_user: root
    login_password: "{{ openstack_sql_root_dbpass }}"
    login_unix_socket: /var/run/mysql/mysql.sock
  delegate_to: "{{ groups['sql_database'][0] }}"
  with_items:
    - localhost
    - "%"

- name: CREATE glance USER
  no_log: true
  openstack.cloud.identity_user:
    cloud: admin
    endpoint_type: admin
    name: glance
    password: "{{ openstack_glance_pass }}"
    domain: default
    state: present
  become: false

- name: ASSIGN glance USER TO ADMIN ROLE
  openstack.cloud.role_assignment:
    cloud: admin
    endpoint_type: admin
    role: admin
    user: glance
    project: service
    domain: default
    state: present
  become: false

- name: CREATE glance SERVICE
  openstack.cloud.catalog_service:
    cloud: admin
    endpoint_type: admin
    name: glance
    type: image
    description: "OpenStack Image"
    state: present
  become: false

- name: CREATE glance ENDPOINTS
  openstack.cloud.endpoint:
    cloud: admin
    endpoint_type: admin
    service: glance
    endpoint_interface: "{{ item }}"
    url: "http://{{ openstack_glance_host }}:9292"
    region: RegionOne
    state: present
  become: false
  with_items:
    - public
    - internal
    - admin

- name: GLANCE USER
  ansible.builtin.user:
    name: glance
    create_home: true
    home: /var/lib/glance
    shell: /usr/sbin/nologin
    system: true
    uid: 64062
    groups: openstack-services

- name: INSTALL GLANCE
  ansible.builtin.pip:
    name:
      - "git+https://opendev.org/openstack/glance@stable/zed#egg=glance"
      - cryptography
      - keystonemiddleware
      - os-brick
      - oslo.rootwrap
      - osprofiler
      - PyMySQL
      - pymemcache
      - python-cinderclient
      - python-glanceclient
      - python-keystoneclient
      - python-memcached
      - python-swiftclient
      - warlock
    extra_args: >-
      --constraint https://opendev.org/openstack/requirements/raw/branch/stable/zed/upper-constraints.txt

- name: CHOWN GLANCE CONFIG
  ansible.builtin.file:
    path: /usr/local/etc/glance
    recurse: true
    state: directory
    owner: root
    group: glance
    mode: "0750"

- name: GLANCE CONFIGURATION
  ansible.builtin.template:
    src: ./usr/local/etc/glance/glance-api.conf
    dest: /usr/local/etc/glance/glance-api.conf
    owner: root
    group: glance
    mode: "0750"
  register: glance_configuration

- name: Perform a Glance DB sync
  command: "/usr/local/bin/glance-manage --config-file /usr/local/etc/glance/glance-api.conf --config-dir /usr/local/etc/glance db_sync"
  become: true
  become_user: glance
  changed_when: false

- name: Load glance metadata definitions
  command: "/usr/local/bin/glance-manage --config-file /usr/local/etc/glance/glance-api.conf --config-dir /usr/local/etc/glance db_load_metadefs /usr/local/etc/glance/metadefs"
  become: true
  become_user: glance
  changed_when: false

- name: GLANCE RC.D
  ansible.builtin.template:
    src: ./usr/local/etc/rc.d/glance_api
    dest: /usr/local/etc/rc.d/glance_api
    owner: root
    group: wheel
    mode: "0755"
  register: glance_rcd

- name: Enable & Start Glance API for configuration change
  ansible.builtin.service:
    name: glance_api
    state: started
    enabled: true

- name: Restart Glance API for configuration change
  ansible.builtin.service:
    name: glance_api
    state: restarted
  when: glance_configuration.changed
